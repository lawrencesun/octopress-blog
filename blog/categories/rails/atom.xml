<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Rails | Lawrence Sun]]></title>
  <link href="http://voice.lawrencesun.info/blog/categories/rails/atom.xml" rel="self"/>
  <link href="http://voice.lawrencesun.info/"/>
  <updated>2014-01-27T14:30:32+08:00</updated>
  <id>http://voice.lawrencesun.info/</id>
  <author>
    <name><![CDATA[Lawrence Sun]]></name>
    <email><![CDATA[yuliang1987@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Rails Notes]]></title>
    <link href="http://voice.lawrencesun.info/posts/2014/01/27/rails-note-1/"/>
    <updated>2014-01-27T09:32:52+08:00</updated>
    <id>http://voice.lawrencesun.info/posts/2014/01/27/rails-note-1</id>
    <content type="html"><![CDATA[<p>After reading <a href="http://ruby.railstutorial.org"><em>Ruby on Rails Tutorial</em></a> &mdash;without a sound approach to the testing part, I am still confused. Before that I read the first chapter of <a href="http://guides.rubyonrails.org"><em>Rails Guides</em></a>, watched some courses about HTML and CSS on <a href="http://zfer.us/9yIBW"><em>Code School</em></a>. So it&rsquo;s better than the first time when I gived up halfway.</p>

<p>I decided to start a project similar to the sample_app for practice. It will be a blog-like web app, focusing on the startup news and stories in Chinese.</p>

<p>I will take some notes here throughout the whole progress.</p>

<!-- more -->


<ul>
<li><strong>Migrations</strong></li>
</ul>


<p>run <code>rails generate migration CreatePosts title:string text:text</code> to create a blank migration</p>

<p>create tables and run <code>rake db:migrate</code>
``` ruby
class CreatePosts &lt; ActiveRecord::Migration</p>

<pre><code>def up
    create_table :posts do |t|
        t.string :title
        t.text :text
        t.timestamps
    end
end

def down
    drop_table :posts
end
</code></pre>

<p>end
```</p>

<ul>
<li><strong>Models</strong></li>
</ul>


<p>create &lsquo;post.rb&rsquo; under /app/models, some valiations and 1-M relationship.
``` ruby
class Post &lt; ActiveRecord::Base</p>

<pre><code>has_many :comments
validates :title, presence: true, 
                                    uniqueness: true,
                                    length: { minimum: 5}
validates :text, presence: true
</code></pre>

<p>end
```</p>

<ul>
<li><strong>Routes</strong></li>
</ul>


<p>nested routes:
<code>ruby
resources :posts do
  resources :comments
end
</code></p>

<p>run <code>rake routes</code>
```</p>

<pre><code>            Prefix Verb             URI Pattern                             Controller#Action
post_comments GET    /posts/:post_id/comments(.:format)          comments#index
              POST   /posts/:post_id/comments(.:format)          comments#create
</code></pre>

<p> new_post_comment GET    /posts/:post_id/comments/new(.:format)      comments#new
edit_post_comment GET    /posts/:post_id/comments/:id/edit(.:format) comments#edit</p>

<pre><code> post_comment GET    /posts/:post_id/comments/:id(.:format)      comments#show
              PATCH  /posts/:post_id/comments/:id(.:format)      comments#update
              PUT    /posts/:post_id/comments/:id(.:format)      comments#update
              DELETE /posts/:post_id/comments/:id(.:format)      comments#destroy
        posts GET    /posts(.:format)                            posts#index
              POST   /posts(.:format)                            posts#create
     new_post GET    /posts/new(.:format)                        posts#new
    edit_post GET    /posts/:id/edit(.:format)                   posts#edit
         post GET    /posts/:id(.:format)                        posts#show
              PATCH  /posts/:id(.:format)                        posts#update
              PUT    /posts/:id(.:format)                        posts#update
              DELETE /posts/:id(.:format)                        posts#destroy
</code></pre>

<p>```</p>

<p>Example link to usage
<code>ruby
&lt;%= link_to 'All posts', posts_path %&gt;
&lt;%= link_to 'New post', new_post_path %&gt;
&lt;%= link_to 'Edit post', edit_post_path(@post) %&gt;
&lt;%= link_to 'Show post', post_path(@post)%&gt; # or @post
&lt;%= link_to 'Delete post', @post, method: :delete, data: { confirm: 'Sure'?} %&gt;
</code></p>

<ul>
<li><strong>Controller</strong></li>
</ul>


<p>create &lsquo;posts_controller.rb&rsquo; under /app/controllers
```ruby
class PostsController &lt; ApplicationController</p>

<pre><code>before_action :find_post, only:[:show, :edit, :update, :destroy]

def index
    @post = Post.all
end

def show
    @comment = Comment.new
end

def new
    @post = Post.new
end

def create
    @post = Post.new(post_params)

    if @post.save
        flash[:success] = "发布成功"
        redirect_to @post
    else
        render 'new'
    end
end 

def edit
end

def update
    if @post.update(params[:post].permit(:title, :text))
        flash[:success] = "更新成功"
        redirect_to @post
    else 
        render 'edit'
    end
end 

def destroy
    @post.destroy
    redirect_to @post
end

private
    def find_post
        @post = Post.find(params[:id])
    end

    def post_params
        params.require(:post).permit(:title, :text)
    end
</code></pre>

<p>end
```</p>

<ul>
<li><strong>Views</strong></li>
</ul>


<p>View Partials
create &lsquo;_form.html.erb&rsquo; under /app/views/posts
```ruby</p>

<h1>model backed form</h1>

<div class="well">
    <%= form_for @post do |f| %>
        <%= render 'shared/error', object: @post %>
        
        <div class="control-group">
        <%= f.label "标题" %>
        <%= f.text_field :title, class: "input-block-level" %> #full-width
        </div>

        <div class="control-group">
        <%= f.label "内容" %>
        <%= f.text_area :text, rows: 10, class: "input-block-level" %> 
        </div>

        <%= f.submit(@post.new_record? ? "发布" : "更新", class: "btn btn-primary") %>
    <% end %>
    <%= link_to '取消', posts_path(@post) %>
</div>


<p>```</p>

<p>&lsquo;show.html.erb&rsquo; under /app/views/posts
```ruby</p>

<div class="container">
    <div class="row">
        <div class="span9">
            ...

            <div class="well">
                <% if @post.comments.any? %>
                    <% @post.comments.each do |c| %>
                        <p><%= c.body %></p>
                    <% end %>
                <% end %>
                <hr>
                <%= form_for [@post, @comment] do |f| %>
                    <%= render 'shared/error', object: @comment %>
                    <div class="control-group">
                        <%= f.text_area :body, rows: 5, class: "input-block-level" %>
                    </div>
                    <%= f.submit '发表评论', class: "btn btn-primary"%>
                <% end %>
            </div>
        </div>

    <div class="span3">
        ...
    </div>
    </div>
</div>


<p>```</p>
]]></content>
  </entry>
  
</feed>
